[pytest]
# Pytest configuration for AI Pal

# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*
testpaths = tests

# Output options
addopts =
    -v
    --strict-markers
    --tb=short
    --cov=src/ai_pal
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-branch
    --cov-fail-under=70

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, test component interaction)
    e2e: End-to-end tests (slowest, test complete workflows)
    slow: Slow-running tests (skip with -m "not slow")
    asyncio: Tests using asyncio

# Asyncio configuration
asyncio_mode = auto

# Coverage
[coverage:run]
source = src/ai_pal
omit =
    */tests/*
    */conftest.py
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov
